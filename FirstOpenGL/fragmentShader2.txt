#version 330 core
in vec2 texCoord;
in vec3 normal;
in vec3 pos;

out vec4 FragColor;

uniform sampler2D ourTexture;
uniform float ambient;
uniform vec3 lightPos;
uniform vec3 viewPos;

void main()
{
	float specularStrength = 0.5;
	vec3 norm = normalize(normal);
	vec3 lightDir = normalize(lightPos - pos); 
	float diff = max(dot(norm, lightDir), 0.0);
	vec3 viewDir = normalize(viewPos - pos);
	vec3 reflectDir = reflect(-lightDir, norm); 
	float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
	float specular = specularStrength * spec;
    FragColor = texture(ourTexture, texCoord) * (ambient + diff + specular);
}